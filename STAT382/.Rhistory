?plot
?plot
beta_5 <- pnorm(p_5, mean = population_proportions, sd = sqrt(var_phat), lower.tail = F)
beta_5
beta_1 <- pnorm(p_1, mean = population_proportions, sd = sqrt(var_phat), lower.tail = F)
beta_1
plot(population_proportions, beta_5, ylab = "Beta Values", ylim = c(0,1), type = "1", col = "red", )
plot(x = population_proportions, y = beta_5, ylab = "Beta Values", ylim = c(0,1), type = "1", col = "red", )
plot(population_proportions, y = beta_5, ylab = "Beta Values", ylim = c(0,1), type = "1", col = "red", )
plot(x = population_proportions, y = beta_5, ylab = "Beta Values", ylim = c(0,1), type = 1, col = "red")
plot(population_proportions, beta_5, ylab = "Beta Values", ylim = c(0,1), type = "1", col = "red")
plot(population_proportions, beta_1, ylab = "Beta Values", ylim = c(0,1), type = "1", col = "red")
plot(population_proportions, beta_5, ylab = "Beta Values", ylim = c(0,1), type = "l", col = "red")
plot(population_proportions, beta_1, ylab = "Beta Values", ylim = c(0,1), type = "l", col = "blue")
par(new=TRUE)
plot(population_proportions, beta_5, ylab = "Beta Values", ylim = c(0,1), type = "l", col = "red")
1 - pnorm(0.65, mean = 0.67, sd = sqrt(var_phat) / sqrt(1000)
pop_prop1 <- pnorm(0.65, mean = 0.67, sd = sqrt(var_phat) / sqrt(1000)
pop_prop1 <- pnorm(0.65, mean = 0.67, sd = sqrt(var_phat) / sqrt(1000))
1 - pop_prop1
pop_prop1
pop_prop1 <- pnorm(0.65, mean = 0.67, sd = sqrt(var_phat))
pop_prop1
pop_prop1 <- pnorm(p_5, mean = 0.67, sd = sqrt(var_phat))
1 - pop_prop1
pop_prop2 <- pnorm(p_1, mean = 0.67, sd = sqrt(var_phat))
1 - pop_prop2
WH 7
setwd
setwd("/Users/liza/Desktop/STAT382")
mydata <- read.csv("breast_cancer_v2.csv")
View(mydata)
chisq.test(mydata, correct = FALSE)
str(mydata$Node_caps)
str(mydata$Deg_malig)
mydata$Node_caps <- factor(mydata$Node_caps, order)
mydata$Node_caps <- factor(mydata$Node_caps, order = TRUE, levels = c("yes", "no"))
chisq.test(mydata, correct = FALSE)
str(mydata$Node_caps)
table(mydata)
table(mydata$Node_caps, mydata$Deg_malig)
table1 <- table(mydata$Node_caps, mydata$Deg_malig)
chisq.test(table1, correct = FALSE)
chisq.test(table1)
table1
data <- matrix(c(12, 4, 6, 9), nrow = 2, byrow = TRUE, dimnames = list(c("Drug A", "Drug B"), c("Improved", "Stayed the same or did not improve"))
data <- matrix(c(12, 4, 6, 9), nrow = 2, byrow = TRUE, dimnames = list(c("Drug A", "Drug B"), c("Improved", "Stayed the same or did not improve"))
c
c
data <- matrix(data = c(12, 4, 6, 9), nrow = 2, ncol = 2, byrow = TRUE)
data
rownames(data) <- c("Drug A", "Drug B")
colnames(data) <- c("Improved", "Stayed the same or did not improve")
data
fisher.test(data, alternative = "two.sided")
people <- matrix(data = c(12, 4, 6, 9), nrow = 2, ncol = 2, byrow = TRUE)
rownames(people) <- c("Drug A", "Drug B")
colnames(people) <- c("Improved", "Stayed the same or did not improve")
people
fisher.test(people, alternative = "two.sided")
fisher.test(people, alternative = "two.sided", or = 1)
library(lmtest)
mydata <- load("/Users/liza/Desktop/STAT382/Classroom_Workspace.RData")
View(aov.classroom)
View(classroom)
View(lm.classroom)
call
lm.classroom$call
lm(formula = classroom$scores ~ classroom$location)
call <- lm(formula = classroom$scores ~ classroom$location)
lm.anova <- anova(call)
lm.anova
an <- aov(classroom$scores ~ classroom$location)
an
summary(an)
lm.classroom
lm.anova <- anova
lm.anova <- anova(lm.classroom)
lm.anova
summary(lm.anova)
an <- aov(lm.classroom)
an
summary(an)
summary(lm.classroom)
summary(mydata)
summary(mydata$classroom)
summary(classroom$location)
residual <- lm.classroom$residual
residual
classroom
classroom1 <- classroom1$residualsl[classroom1$location == "Front"]
classroom <- classroom$residualsl[classroom$location == "Front"]
classroom
mydata <- load("/Users/liza/Desktop/STAT382/Classroom_Workspace.RData")
load("/Users/liza/Desktop/STAT382/Classroom_Workspace.RData")
load("/Users/liza/Desktop/STAT382/Classroom_Workspace.RData")
mydata <- load("/Users/liza/Desktop/STAT382/Classroom_Workspace.RData")
mydata
mydata <- load("/Users/liza/Desktop/STAT382/Classroom_Workspace.RData")
mydata <- load("/Users/liza/Desktop/STAT382/Classroom_Workspace.RData")
load("/Users/liza/Desktop/STAT382/Classroom_Workspace.RData")
View(classroom)
View(aov.classroom)
View(lm.classroom)
class2 <- cbind(classroom, residual)
class2 <- cbind(classroom, classroom$residual)
class2
class2 <- cbind(classroom)
class2
class2front <- class2$residual[class2$location == "Front"]
class2mid <- class2$residual[class2$location == "Middle"]
class2back <- class2$residual[class2$location == "Back"]
par(mfrow = c(2,2))
hist(class2front, right = FALSE, main = "Residual Histogram", sub = "Location: Front")
class2front <- class2$residual[class2$location == "Front"]
class2front
hist(class2front, main = "Residual Histogram", sub = "Location: Front")
par(mfrow = c(0,2))
par(mfrow = c(1,3))
hist(class2front, main = "Residual Histogram", sub = "Location: Front")
par(mfrow = c(1,2))
hist(class2front, main = "Residual Histogram", sub = "Location: Front")
par(mfrow = c(2,2))
hist(class2front, main = "Residual Histogram", sub = "Location: Front")
par(mar=c(1, 1, 1, 1))
hist(class2front, main = "Residual Histogram", sub = "Location: Front")
par(mfrow = c(2,2))
hist(class2front, main = "Residual Histogram", sub = "Location: Front")
hist(class2front, right = FALSE, main = "Residual Histogram", sub = "Location: Front")
par(mfrow = c(2,2))
hist(class2front, right = FALSE, main = "Residual Histogram", sub = "Location: Front")
hist(class2front, right = FALSE, main = "Residual Histogram")
par(mfrow = c(2,2))
hist(class2front, right = FALSE, main = "Residual Histogram")
hist(class2mid, right = FALSE, main = "Residual Histogram")
hist(class2back, right = FALSE, main = "Residual Histogram")
par(mfrow = c(1,1))
qqnorm(class2front)
qqline(class2front)
qqnorm(class2front, main = "QQ Plot for Front Location")
qqline(class2front)
qqnorm(class2mid, main = "QQ Plot for Middle Location")
qqline(class2mid)
qqnorm(class2back, main = "QQ Plot for Back Location")
qqline(class2back)
shapiro.test(class2front)
shapiro.test(class2mid)
shapiro.test(class2back)
qqnorm(lm.classroom)
qqnorm(lm.classroom$residuals)
qqnorm(lm.classroom$residuals)
qqline(lm.classroom$residuals)
hist(classroom$residuals, right = FALSE, main = "Residual Histogram", xlab = "Residual")
shapiro.test(lm.classroom$residuals)
plot(lm.classroom$fitted.values, lm.classroom$residuals, xlab = "Predicted Deflection Values", ylab = "Residual", main = "Overall Residual Plot")
abline(h = 0, lty = 2)
boxplot(class2$residual~class2$location, xlab = "Location", ylab = "Residual", main = "Distribution of Residual by Group")
abline(h = 0, lty = 2)
bartlett.test(classroom$Deflection~classroom$location)
bartlett.test(classroom$scores~classroom$location)
lm.anova <- anova(lm.classroom)
lm.anova
an <- aov(lm.classroom)
lm.classroom
an
summary(an)
summary(lm.classroom)
pairwise.t.test(x = classroom$scores, g = classroom$location, p.adj = "bonferroni")
lm.aov <- aov(classroom$scores~classroom$location))
lm.aov <- aov(classroom$scores~classroom$location)
tukey <- TukeyHSD(lm.aov, conf.level = 0.98)
tukey
plot(tukey)
mydata <- read.csv("/Users/liza/Desktop/STAT382/apps_data.csv")
mydata1 <- read.csv("/Users/liza/Desktop/STAT382/paid_apps.csv")
plot(x = mydata$Rating, y = mydata$App_Size, xlab = "Rating", ylab = "App Size", main = "Scatterplot of Rating against App Size")
abline(lm(mydata$Rating~mydata$App_Size))
View(mydata)
plot(x = mydata$App_Size, y = mydata$Rating, xlab = "Rating", ylab = "App Size", main = "Scatterplot of Rating against App Size")
abline(lm(mydata$Rating~mydata$App_Size))
abline(lm(mydata$App_Size~mydata$Rating))
plot(x = mydata$App_Size, y = mydata$Rating, xlab = "App Size", ylab = "Rating", main = "Scatterplot of App Size against Rating")
abline(lm(mydata$Rating~mydata$App_Size))
cor.test(mydata$Rating, mydata$App_Size)
SLR <- lm(mydata$Rating~mydata$App_Size)
SLR
summary(SLR)
game <- mydata[mydata$Category=="GAME",4]
notgame <- mydata[mydata$Category !="GAME",4]
var.test(game, notgame, conf.level = 0.93)
t.test(game, notgame, paired = FALSE, conf.level = 0.93, var.equal = FALSE)
plot(x = mydata$Rating, y = SLR$residual)
plot(x = mydata$App_Size, y = SLR$residual)
abline(h=0)
qqnorm(SLR$residual)
qqline(SLR$residual)
shapiro.test(SLR$residuals)
plot(x = SLR$fitted.values, y = SLR$residuals, xlab = "Fitted Values", ylab = "Residuals", main = "Equal Variance Check")
abline(h=0,lty=2)
plot(x = SLR$fitted.values, y = SLR$residuals, xlab = "Fitted Values", ylab = "Residuals", main = "Equal Variance Check")
abline(h=0)
SLR$coefficients
MLR <- lm
MLR <- lm(mydata1$Price~mydata1$Rating + mydata1$App_Size)
plot(x = mydata1$Rating, y = MLR$residuals)
abline(h=0)
plot(x = mydata1$App_Size, y = MLR$residuals)
abline(h=0)
shapiro.test(SLR$residuals)
plot(x = SLR$fitted.values, y = SLR$residuals, xlab = "Fitted Values", ylab = "Residuals", main = "Equal Variance Check")
abline(h=0)
summary(SLR)
plot(x = mydata1$Rating, y = MLR$residuals)
abline(h=0)
plot(x = mydata1$App_Size, y = MLR$residuals)
abline(h=0)
shapiro.test(MLR$residuals)
plot(x = MLR$fitted.values, y = MLR$residuals, xlab = "Fitted Values", ylab = "Residuals", main = "Equal Variance Check")
plot(x = MLR$fitted.values, y = MLR$residuals, xlab = "Fitted Values", ylab = "Residuals", main = "Equal Variance Check, MLR")
abline(h=0)
plot(x = mydata1$App_Size, y = MLR$residuals)
abline(h=0)
plot(x = mydata1$Rating, y = MLR$residuals)
abline(h=0)
summary(MLR)
plot(x = mydata$App_Size, y = SLR$residual)
abline(h=0)
plot(x = SLR$fitted.values, y = SLR$residuals, xlab = "Fitted Values", ylab = "Residuals", main = "Equal Variance Check")
abline(h=0)
mydata$Category <- factor(mydata$Category)
mydata$Content.Rating <- factor(mydata$Content.Rating)
mydata$Genre <- factor(mydata$Genre)
mydata1$Category <- factor(mydata1$Category)
mydata1$Content.Rating <- factor(mydata1$Content.Rating)
mydata1$Genre <- factor(mydata1$Genre)
avrg <- tapply(mydata$Reviews, mydata$Category, mean, na.rm=TRUE)
avrg
an <- aov(mydata$Reviews~mydata$Category)
an
summary(an)
lmmydata <- lm(mydata$Reviews~mydata$Category)
lmmudata
lmmydata
anova(lmmydata)
hist(llmmydata$residuals, right = FALSE)
hist(lmmydata$residuals, right = FALSE)
qqnorm(lmmydata$residuals)
qqline(lmmydata$residuals)
shapiro.test(lmmydata$residuals)
plot(x = lmmydata$fitted.values, y = lmmydata$residuals, xlab = "Fitted Values", ylab = "Residuals", main = "Equal Variance Check, 1 Way Anova")
abline(h=0)
anova(lmmydata)
avrg
summary(lmmydata)
library(car)
install.packages("car")
library(car)
levene.test(lmmydata)
leveneTest(lmmydata)
summary(mydata$Category)
load("/Users/liza/Desktop/STAT382/Classroom_Workspace.RData")
View(classroom)
View(lm.classroom)
class2 <- cbind(classroom)
class2
data <- cbind(mydata)
data
datafam <- datafam$residual[datafam$location == "FAMILY"]
datafam <- data$residual[datafam$location == "FAMILY"]
datafam <- data$residual[data$location == "FAMILY"]
datagame <- data$residual[data$location == "GAME"]
datatool <- data$residual[data$location == "TOOLS"]
datafam
class2 <- cbind(classroom)
class2front
class2front <- class2$residual[class2$location == "Front"]
class2front
lmmydata
residual <- lmmydata$residuals
mydata2 <- cbind
mydata2 <- cbind(mydata, residual)
mydata2
mydata2fam <- mydata2$residual[mydata2$location == "FAMILY"]
mydata2game <- mydata2$residual[mydata2$location == "GAME"]
mydata2tool <- mydata2$residual[mydata2$location == "TOOLS"]
mydata2fam
mydata2fam <- mydata2$residual[mydata2$Category == "FAMILY"]
mydata2game <- mydata2$residual[mydata2$Category == "GAME"]
mydata2tool <- mydata2$residual[mydata2$Category == "TOOLS"]
mydata2fam
qqnorm(mydata2fam)
qqline(mydata2fam)
qqnorm(mydata2game)
qqline(mydata2game)
qqnorm(mydata2tool)
qqline(mydata2tool)
shapiro.test(mydata2fam)
shapiro.test(mydata2game)
shapiro.test(mydata2tool)
par(mfrow = c(2,2))
hist(mydata2fam, right = FALSE, main = "Residual Histogram", sub = "Category Family")
hist(mydata2game, right = FALSE, main = "Residual Histogram", sub = "Category Game")
hist(mydata2tool, right = FALSE, main = "Residual Histogram", sub = "Category Tools")
par(mfrow = c(1,1))
par(mfrow = c(2,2))
hist(mydata2fam, right = FALSE, main = "Residual Histogram", sub = "Category Family")
hist(mydata2game, right = FALSE, main = "Residual Histogram", sub = "Category Game")
hist(mydata2tool, right = FALSE, main = "Residual Histogram", sub = "Category Tools")
par(mfrow = c(1,1))
leveneTest(lmmydata)
leveneTest(mydata$Reviews~mydata$Category)
plot(x = lmmydata$fitted.values, y = lmmydata$residuals, xlab = "Fitted Values", ylab = "Residuals", main = "Equal Variance Check, Reviews vs Category")
abline(h=0)
lm.anova <-  anova(lmmydata)
lm.anova
lm.aov <- aov(mydata$Reviews~mydata$Category)
tukey <- TukeyHSD(lm.aov, conf.level = 0.96)
tukey
lmmydata1 <- lm(mydata$Rating~mydata$Category)
data <- cbind(mydata)
datafam <- data$residual[data$Category == "FAMILY"]
datagame <- data$residual[data$Category == "GAME"]
datatool <- data$residual[data$Category == "TOOLS"]
data
mydata3 <- cbind(mydata)
mydata3fam <- mydata3$residual[mydata3$Category == "FAMILY"]
mydata3game <- mydata3$residual[mydata3$Category == "GAME"]
mydata3tool <- mydata3$residual[mydata3$Category == "TOOLS"]
qqnorm(mydata3fam)
mydata3
mydata3fam <- mydata3$residual[mydata3$Category == "FAMILY"]
mydata3fam
View(an)
mydata <- read.csv("/Users/liza/Desktop/STAT382/apps_data.csv")
mydata1 <- read.csv("/Users/liza/Desktop/STAT382/paid_apps.csv")
mydata$Category <- factor(mydata$Category)
mydata$Content.Rating <- factor(mydata$Content.Rating)
mydata$Genre <- factor(mydata$Genre)
mydata1$Category <- factor(mydata1$Category)
mydata1$Content.Rating <- factor(mydata1$Content.Rating)
mydata1$Genre <- factor(mydata1$Genre)
mydata2 <- cbind(mydata)
mydata2fam <- mydata2$residual[mydata2$Category == "FAMILY"]
mydata2game <- mydata2$residual[mydata2$Category == "GAME"]
mydata2tool <- mydata2$residual[mydata2$Category == "TOOLS"]
residual <- lmmydata1$residual
lmmydata1 <- lm(mydata$Rating~mydata$Category)
residual1 <- lmmydata1$residual
mydata3 <- cbind(mydata, residual1)
mydata3fam <- mydata3$residual[mydata3$Category == "FAMILY"]
mydata3game <- mydata3$residual[mydata3$Category == "GAME"]
mydata3tool <- mydata3$residual[mydata3$Category == "TOOLS"]
qqnorm(mydata3fam)
qqline(mydata3fam)
qqnorm(mydata2game)
qqnorm(mydata3tool)
qqline(mydata3tool)
qqnorm(mydata3game)
qqline(mydata3game)
shapiro.test(mydata3fam)
shapiro.test(mydata3game)
shapiro.test(mydata3tool)
par(mfrow = c(2,2))
hist(mydata3fam, right = FALSE, main = "Residual Histogram", sub = "Category Family")
hist(mydata3game, right = FALSE, main = "Residual Histogram", sub = "Category Game")
hist(mydata3tool, right = FALSE, main = "Residual Histogram", sub = "Category Tools")
par(mfrow = c(1,1))
leveneTest(lmmydata1)
plot(x = lmmydata1$fitted.values, y = lmmydata1$residuals, xlab = "Fitted Values", ylab = "Residuals", main = "Equal Variance Check, MLR")
lm.anova1 <-  anova(lmmydata1)
lm.anova1
mydata1$Category <- factor(mydata1$Category)
mydata1$Content.Rating <- factor(mydata1$Content.Rating)
mydata1$Genre <- factor(mydata1$Genre)
lmmydata2 <- lm(mydata1$Price~mydata1$Content.Rating*mydata1$Category)
anova(lmmydata2)
hist(lmmydata2$residuals, right = FALSE)
qqnorm(lmmydata2$residuals)
qqline(lmmydata2$residuals)
shapiro.test(lmmydata2$residuals)
qqnorm(lmmydata2$residuals, main = "Q-Q Plot of lmmydata2")
qqline(lmmydata2$residuals)
plot(x = lmmydata2$fitted.values, y = lmmydata2$residuals, xlab = "Fitted Values", ylab = "Residuals", main = "Equal Variance Check, lmmydata2")
abline(h=0)
anova(lmmydata2)
mydata1
View(mydata1)
summary(mydata1$Category)
library(HH)
interaction2wt(mydata1$Price~mydata1$Content.Rating*mydata1$Category)
interaction.plot(x.factor = mydata1$Content.Rating,trace.factor = mydata1$Category,response = mydata1$Price)
mean_price_category <- tapply(mydata1$Price,mydata1$Category,mean)
bp1 <- barplot(mean_price_category, xlab = "Category", ylab = "Price")
bp1 <- barplot(mean_price_category, xlab = "Category", ylab = " Average Price", xlim = c(0, 10))
bp1 <- barplot(mean_price_category, xlab = "Category", ylab = " Average Price", ylim = c(0, 10))
bp1 <- barplot(mean_price_category, xlab = "Category", ylab = " Average Price", ylim = c(0, 6))
bp1 <- barplot(mean_price_category, xlab = "Category", ylab = " Average Price", main = "Barplot of Price vs Category", ylim = c(0, 6))
mean_price_contentRating <- tapply(mydata1$Price,mydata1$Content.Rating ,mean)
bp2 <- barplot(mean_price_contentRating, xlab = "Content Rating", ylab = " Average Price", main = "Barplot of Price vs Content Rating", ylim = c(0, 6))
anova(lmmydata2)
plot(x = mydata$App_Size, y = SLR$residual, main = "Linearity Check, SLR")
plot(x = mydata$App_Size, y = SLR$residual, main = "Linearity Check SLR")
SLR <- lm(mydata$Rating~mydata$App_Size)
plot(x = mydata$App_Size, y = mydata$Rating, xlab = "App Size", ylab = "Rating", main = "Scatterplot of App Size against Rating")
abline(lm(mydata$Rating~mydata$App_Size))
plot(x = mydata$App_Size, y = SLR$residual, main = "Linearity Check, SLR"))
plot(x = mydata$App_Size, y = SLR$residual, main = "Linearity Check, SLR")
plot(x = mydata$App_Size, y = SLR$residual, main = "Linearity Check, SLR")
abline(h=0)
plot(x = SLR$fitted.values, y = SLR$residuals, xlab = "Fitted Values", ylab = "Residuals", main = "Equal Variance Check, SLR")
abline(h=0)
MLR <- lm(mydata1$Price~mydata1$Rating + mydata1$App_Size)
plot(x = mydata1$Rating, y = MLR$residuals, main = "Linearity Check, MLR")
abline(h=0)
plot(x = mydata1$App_Size, y = MLR$residuals, main = "Linearity Check for App Size, MLR")
plot(x = mydata1$Rating, y = MLR$residuals, main = "Linearity Check for Rating, MLR")
abline(h=0)
plot(x = mydata1$App_Size, y = MLR$residuals, main = "Linearity Check for App Size, MLR")
abline(h=0)
lmmydata <- lm(mydata$Reviews~mydata$Category)
summary(mydata$Category)
residual <- lmmydata$residual
mydata2 <- cbind(mydata)
mydata2fam <- mydata2$residual[mydata2$Category == "FAMILY"]
mydata2game <- mydata2$residual[mydata2$Category == "GAME"]
mydata2tool <- mydata2$residual[mydata2$Category == "TOOLS"]
qqnorm(mydata2fam, main = "Q-Q Plot for Family Category")
mydata2fam
mydata <- read.csv("/Users/liza/Desktop/STAT382/apps_data.csv")
mydata1 <- read.csv("/Users/liza/Desktop/STAT382/paid_apps.csv")
mydata$Category <- factor(mydata$Category)
mydata$Content.Rating <- factor(mydata$Content.Rating)
mydata$Genre <- factor(mydata$Genre)
mydata1$Category <- factor(mydata1$Category)
mydata1$Content.Rating <- factor(mydata1$Content.Rating)
mydata1$Genre <- factor(mydata1$Genre)
lmmydata <- lm(mydata$Reviews~mydata$Category)
residual <- lmmydata$residual
mydata2 <- cbind(mydata, residual)
mydata2fam <- mydata2$residual[mydata2$Category == "FAMILY"]
mydata2game <- mydata2$residual[mydata2$Category == "GAME"]
mydata2tool <- mydata2$residual[mydata2$Category == "TOOLS"]
qqnorm(mydata2fam, main = "Q-Q Plot for Family Category")
qqline(mydata2fam)
qqnorm(mydata2game, main = "Q-Q Plot for Game Category")
qqline(mydata2game)
qqnorm(mydata2tool, main = "Q-Q Plot for Game Category")
qqline(mydata2tool)
qqnorm(mydata2tool, main = "Q-Q Plot for Tools Category")
qqline(mydata2tool)
lmmydata1 <- lm(mydata$Rating~mydata$Category)
summary(mydata$Category)
residual1 <- lmmydata1$residual
mydata3 <- cbind(mydata)
mydata3fam <- mydata3$residual[mydata3$Category == "FAMILY"]
mydata3game <- mydata3$residual[mydata3$Category == "GAME"]
mydata3tool <- mydata3$residual[mydata3$Category == "TOOLS"]
lmmydata1 <- lm(mydata$Rating~mydata$Category)
summary(mydata$Category)
residual1 <- lmmydata1$residual
mydata3 <- cbind(mydata, residual1)
mydata3fam <- mydata3$residual[mydata3$Category == "FAMILY"]
mydata3game <- mydata3$residual[mydata3$Category == "GAME"]
mydata3tool <- mydata3$residual[mydata3$Category == "TOOLS"]
qqnorm(mydata3fam, main = "Q-Q Plot for Family Category")
qqline(mydata3fam)
qqnorm(mydata3game, main = "Q-Q Plot for Game Category")
qqline(mydata3game)
qqnorm(mydata3tool, main = "Q-Q Plot for Tools Category")
qqline(mydata3tool)
lmmydata2 <- lm(mydata1$Price~mydata1$Content.Rating*mydata1$Category)
interaction.plot(x.factor = mydata1$Content.Rating,trace.factor = mydata1$Category,response = mydata1$Price)
interaction.plot(x.factor = mydata1$Content.Rating,trace.factor = mydata1$Category,response = mydata1$Price, main = "Interaction Plot")
hist(lmmydata2$residuals, right = FALSE)
install.packages("rmarkdown")
library(rmarkdown)
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
library(rmarkdown)
source("~/.active-rstudio-document", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
t.test(mydata$App_Size, mu = 0.25, alternative = "greater", conf.level = 0.92)
tinytex::install_tinytex()
SLR <- lm(mydata$Rating~mydata$App_Size)
plot(x = mydata$App_Size, y = mydata$Rating, xlab = "App Size", ylab = "Rating", main = "Scatterplot of App Size against Rating")
abline(lm(mydata$Rating~mydata$App_Size))
### Normality Check
shapiro.test(SLR$residuals)
#Normality assumption is met because p-value (0.1587) is big compare to significance level of 0.03.
library(car)
install.packages("car")
library(car)
library(car)
install.packages("car")
install.packages("car")
(install.packages("hms"))
install.packages("car")
library(car)
library(reshape2)
lmmydata <- lm(mydata$Reviews~mydata$Category)
leveneTest(lmmydata)
install.packages("car")
install.packages("car")
library(car)
1
install.packages("car")
library(car)
library(reshape2)
leveneTest(lmmydata)
install.packages("car")
install.packages("car")
